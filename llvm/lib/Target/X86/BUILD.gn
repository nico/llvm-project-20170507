import("//llvm/utils/TableGen/tablegen.gni")

group("X86") {
  deps = [
    ":X86CodeGen",
    "AsmParser",
    "Disassembler",
    "InstPrinter",
    "MCTargetDesc",
    "TargetInfo",
    "Utils",
  ]
}

tablegen_calls = [
  [
    "X86GenAsmMatcher",
    [ "-gen-asm-matcher" ],
  ],
  [
    "X86GenAsmWriter",
    [ "-gen-asm-writer" ],
  ],
  [
    "X86GenAsmWriter1",
    [
      "-gen-asm-writer",
      "-asmwriternum=1",
    ],
  ],
  [
    "X86GenCallingConv",
    [ "-gen-callingconv" ],
  ],
  [
    "X86GenDAGISel",
    [ "-gen-dag-isel" ],
  ],
  [
    "X86GenDisassemblerTables",
    [ "-gen-disassembler" ],
  ],
  [
    "X86GenEVEX2VEXTables",
    [ "-gen-x86-EVEX2VEX-tables" ],
  ],
  [
    "X86GenFastISel",
    [ "-gen-fast-isel" ],
  ],
  [
    "X86GenGlobalISel",
    [ "-gen-global-isel" ],
  ],
  [
    "X86GenInstrInfo",
    [ "-gen-instr-info" ],
  ],
  [
    "X86GenRegisterBank",
    [ "-gen-register-bank" ],
  ],
  [
    "X86GenRegisterInfo",
    [ "-gen-register-info" ],
  ],
  [
    "X86GenSubtargetInfo",
    [ "-gen-subtarget" ],
  ],
]
foreach(tablegen_call, tablegen_calls) {
  tablegen(tablegen_call[0]) {
    args = tablegen_call[1]
    td_file = "X86.td"
  }
}

group("tablegen") {
  public_deps = []
  foreach(tablegen_call, tablegen_calls) {
    public_deps += [ ":${tablegen_call[0]}" ]
  }
}

# FIXME: X86_GEN_FOLD_TABLES?

static_library("X86CodeGen") {
  deps = [
    ":tablegen",
    "InstPrinter",
    "MCTargetDesc",
    "TargetInfo",
    "Utils",
    "//llvm/lib/Analysis",
    "//llvm/lib/CodeGen",
    "//llvm/lib/CodeGen/AsmPrinter",
    "//llvm/lib/CodeGen/GlobalISel",
    "//llvm/lib/CodeGen/SelectionDAG",
    "//llvm/lib/IR",
    "//llvm/lib/MC",
    "//llvm/lib/Support",
    "//llvm/lib/Target",
  ]
  sources = [
    "ShadowCallStack.cpp",
    "X86AsmPrinter.cpp",
    "X86AvoidStoreForwardingBlocks.cpp",
    "X86CallFrameOptimization.cpp",
    "X86CallLowering.cpp",
    "X86CallingConv.cpp",
    "X86CmovConversion.cpp",
    "X86DomainReassignment.cpp",
    "X86EvexToVex.cpp",
    "X86ExpandPseudo.cpp",
    "X86FastISel.cpp",
    "X86FixupBWInsts.cpp",
    "X86FixupLEAs.cpp",
    "X86FixupSetCC.cpp",
    "X86FlagsCopyLowering.cpp",
    "X86FloatingPoint.cpp",
    "X86FrameLowering.cpp",
    "X86ISelDAGToDAG.cpp",
    "X86ISelLowering.cpp",
    "X86IndirectBranchTracking.cpp",
    "X86InstrFMA3Info.cpp",
    "X86InstrInfo.cpp",
    "X86InstructionSelector.cpp",
    "X86InterleavedAccess.cpp",
    "X86LegalizerInfo.cpp",
    "X86MCInstLower.cpp",
    "X86MachineFunctionInfo.cpp",
    "X86MacroFusion.cpp",
    "X86OptimizeLEAs.cpp",
    "X86PadShortFunction.cpp",
    "X86RegisterBankInfo.cpp",
    "X86RegisterInfo.cpp",
    "X86RetpolineThunks.cpp",
    "X86SelectionDAGInfo.cpp",
    "X86ShuffleDecodeConstantPool.cpp",
    "X86Subtarget.cpp",
    "X86TargetMachine.cpp",
    "X86TargetObjectFile.cpp",
    "X86TargetTransformInfo.cpp",
    "X86VZeroUpper.cpp",
    "X86WinAllocaExpander.cpp",
    "X86WinEHState.cpp",
  ]
}
