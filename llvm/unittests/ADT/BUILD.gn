executable("ADTTests") {
  # test/Unit/lit.cfg expects unittests in LLVM_BINARY_DIR/unittest
  output_dir = target_out_dir
  deps = [
    "//llvm/include/llvm/IR:tablegen",
    "//llvm/lib/Support",
    "//llvm/utils/unittest/UnitTestMain",
  ]
  sources = [
    "APFloatTest.cpp",
    "APIntTest.cpp",
    "APSIntTest.cpp",
    "ArrayRefTest.cpp",
    "BitVectorTest.cpp",
    "BitmaskEnumTest.cpp",
    "BreadthFirstIteratorTest.cpp",
    "BumpPtrListTest.cpp",
    "DAGDeltaAlgorithmTest.cpp",
    "DeltaAlgorithmTest.cpp",
    "DenseMapTest.cpp",
    "DenseSetTest.cpp",
    "DepthFirstIteratorTest.cpp",
    "EquivalenceClassesTest.cpp",
    "FoldingSet.cpp",
    "FunctionRefTest.cpp",
    "HashingTest.cpp",
    "IListBaseTest.cpp",
    "IListIteratorTest.cpp",
    "IListNodeBaseTest.cpp",
    "IListNodeTest.cpp",
    "IListSentinelTest.cpp",
    "IListTest.cpp",
    "ImmutableMapTest.cpp",
    "ImmutableSetTest.cpp",
    "IntEqClassesTest.cpp",
    "IntervalMapTest.cpp",
    "IntrusiveRefCntPtrTest.cpp",
    "IteratorTest.cpp",
    "MakeUniqueTest.cpp",
    "MapVectorTest.cpp",
    "MappedIteratorTest.cpp",
    "OptionalTest.cpp",
    "PackedVectorTest.cpp",
    "PointerEmbeddedIntTest.cpp",
    "PointerIntPairTest.cpp",
    "PointerSumTypeTest.cpp",
    "PointerUnionTest.cpp",
    "PostOrderIteratorTest.cpp",
    "PriorityWorklistTest.cpp",
    "RangeAdapterTest.cpp",
    "SCCIteratorTest.cpp",
    "STLExtrasTest.cpp",
    "ScopeExitTest.cpp",
    "SequenceTest.cpp",
    "SetVectorTest.cpp",
    "SimpleIListTest.cpp",
    "SmallPtrSetTest.cpp",
    "SmallSetTest.cpp",
    "SmallStringTest.cpp",
    "SmallVectorTest.cpp",
    "SparseBitVectorTest.cpp",
    "SparseMultiSetTest.cpp",
    "SparseSetTest.cpp",
    "StatisticTest.cpp",
    "StringExtrasTest.cpp",
    "StringMapTest.cpp",
    "StringRefTest.cpp",
    "StringSwitchTest.cpp",
    "TinyPtrVectorTest.cpp",
    "TripleTest.cpp",
    "TwineTest.cpp",
    "VariadicFunctionTest.cpp",
  ]
  testonly = true
}
