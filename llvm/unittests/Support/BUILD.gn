executable("SupportTests") {
  # test/Unit/lit.cfg expects unittests in LLVM_BINARY_DIR/unittest
  output_dir = target_out_dir
  deps = [
    "//llvm/lib/Support",
    "//llvm/lib/Testing/Support",
    "//llvm/utils/unittest/UnitTestMain",
  ]
  sources = [
    "ARMAttributeParser.cpp",
    "AlignOfTest.cpp",
    "AllocatorTest.cpp",
    "ArrayRecyclerTest.cpp",
    "BinaryStreamTest.cpp",
    "BlockFrequencyTest.cpp",
    "BranchProbabilityTest.cpp",
    "CachePruningTest.cpp",
    "Casting.cpp",
    "CheckedArithmeticTest.cpp",
    "Chrono.cpp",
    "CommandLineTest.cpp",
    "CompressionTest.cpp",
    "ConvertUTFTest.cpp",
    "CrashRecoveryTest.cpp",
    "DJBTest.cpp",
    "DataExtractorTest.cpp",
    "DebugCounterTest.cpp",
    "DebugTest.cpp",
    "EndianStreamTest.cpp",
    "EndianTest.cpp",
    "ErrnoTest.cpp",
    "ErrorOrTest.cpp",
    "ErrorTest.cpp",
    "FileOutputBufferTest.cpp",
    "FormatVariadicTest.cpp",
    "GlobPatternTest.cpp",
    "Host.cpp",
    "JSONTest.cpp",
    "LEB128Test.cpp",
    "LineIteratorTest.cpp",
    "LockFileManagerTest.cpp",
    "MD5Test.cpp",
    "ManagedStatic.cpp",
    "MathExtrasTest.cpp",
    "MemoryBufferTest.cpp",
    "MemoryTest.cpp",
    "NativeFormatTests.cpp",
    "ParallelTest.cpp",
    "Path.cpp",
    "ProcessTest.cpp",
    "ProgramTest.cpp",
    "RegexTest.cpp",
    "ReplaceFileTest.cpp",
    "ReverseIterationTest.cpp",
    "ScaledNumberTest.cpp",
    "SourceMgrTest.cpp",
    "SpecialCaseListTest.cpp",
    "StringPool.cpp",
    "SwapByteOrderTest.cpp",
    "TarWriterTest.cpp",
    "TargetParserTest.cpp",
    "TaskQueueTest.cpp",
    "ThreadLocalTest.cpp",
    "ThreadPool.cpp",
    "Threading.cpp",
    "TimerTest.cpp",
    "TrailingObjectsTest.cpp",
    "TrigramIndexTest.cpp",
    "TypeNameTest.cpp",
    "TypeTraitsTest.cpp",
    "UnicodeTest.cpp",
    "VersionTupleTest.cpp",
    "YAMLIOTest.cpp",
    "YAMLParserTest.cpp",
    "formatted_raw_ostream_test.cpp",
    "raw_ostream_test.cpp",
    "raw_pwrite_stream_test.cpp",
    "raw_sha1_ostream_test.cpp",
    "xxhashTest.cpp",
  ]
  testonly = true
}
